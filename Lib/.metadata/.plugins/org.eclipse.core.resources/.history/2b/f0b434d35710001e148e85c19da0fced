package com.example.service.impl;

import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import com.example.enu.Branch;
import com.example.enu.Gender;
import com.example.enu.UniversityNames;
import com.example.enu.YearOfStudy;
import com.example.model.LoginRequest;
import com.example.model.Student;
import com.example.service.StudentService;

@Service
public class StudentServiceImplementation implements StudentService {
	@Autowired
	JdbcTemplate jdbc;

	public Map registration(Student student) {
		Map<String, Object> response = new HashMap<>();
		if (student != null) {
			String roll_number = student.getRollNumber();
			String firstName = student.getFirstName();
			String lastName = student.getLastName();
			Gender gender = student.getGender();
			System.out.println(gender.toString());
			UniversityNames universityName = student.getUniversityName();
			Date yearOfJoin = student.getYearOfJoin();
			Date passOutYear = student.getPassOutYear();
			String password = student.getPassword();
			String phoneNumber = student.getPhoneNumber();
			String email = student.getEmail();
			YearOfStudy yearOfStudy = student.getYearOfStudy();
			Branch branch = student.getBranch();
			String insertQuery = "insert into students(roll_number,first_name,last_name,gender,start_study_date,end_study_date,branch,password,student_phone_number,student_email,student_yearof_study,university_name) values (?,?,?,?,?,?,?,?,?,?,?,?)";
			int i = jdbc.update(insertQuery, roll_number, firstName, lastName, gender.toString(), yearOfJoin,
					passOutYear, branch.toString(), password, phoneNumber, email, yearOfStudy.toString(),
					universityName.toString());

			if (i > 0) {
				response.put("Status", true);
				response.put("Message", "User Registered succesfully.....!");

			} else {
				response.put("Status", false);
				response.put("Message", "Unable to registered.....!");
			}
		}

		return response;
	}

	public Map<String, Object> login(LoginRequest loginRequest) {
		Map<String, Object> result = new HashMap<>();
		if (loginRequest != null) {
			String sql = "select * from students where roll_number=? and password=?";
			List<Map<String, Object>> data = jdbc.queryForList(sql, loginRequest.getStudentId(),
					loginRequest.getPassword());

			if (data != null && !data.isEmpty()) {
				result.put("status", true);
				result.put("data", data);
			} else {
				result.put("status", false);
				result.put("message", "Invalid credentials");
			}
		} else {
			result.put("status", false);
			result.put("message", "Invalid a valid StudentId or Password....");
		}
		return result;
	}

	public List fullData() {
		List<Map<String, Object>> data = new ArrayList<>();
		String sql = "select * from students";
		data = jdbc.queryForList(sql);

		List<Object> resultList = new ArrayList<>();
		for (Map<String, Object> rowData : data) {
			resultList.add(rowData);
		}

		return resultList;

	}

	public List StudentById(String studentId) {
		List<Map<String, Object>> data = new ArrayList<>();
		String sql = "select * from students where roll_number=?";
		data = jdbc.queryForList(sql, studentId);

		List<Object> resultList = new ArrayList<>();
		for (Map<String, Object> rowData : data) {
			resultList.add(rowData);
		}

		return resultList;

	}

	public int passwordUpdate(String studentId, String password) {
		String updateQuery = "update students set password=? where roll_number=?";
		int i = jdbc.update(updateQuery, password, studentId);
		return i;
	}

}
